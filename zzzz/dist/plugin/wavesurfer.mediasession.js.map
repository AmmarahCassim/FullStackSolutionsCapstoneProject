{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 2c15e2516df024c56ce9","webpack:///./src/plugin/mediasession.js"],"names":["MediaSessionPlugin","params","name","deferInit","instance","ws","wavesurfer","navigator","metadata","update","on","mediaSession","setActionHandler","play","playPause","skipBackward","skipForward","MediaMetadata","Function"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;AC7DA;;AAEA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;IAyBqBA,kB;;;;AACjB;;;;;;;;;+BAScC,M,EAAQ;AAClB,mBAAO;AACHC,sBAAM,cADH;AAEHC,2BAAWF,UAAUA,OAAOE,SAAjB,GAA6BF,OAAOE,SAApC,GAAgD,KAFxD;AAGHF,wBAAQA,MAHL;AAIHG,0BAAUJ;AAJP,aAAP;AAMH;;;AAED,gCAAYC,MAAZ,EAAoBI,EAApB,EAAwB;AAAA;;AAAA;;AACpB,aAAKJ,MAAL,GAAcA,MAAd;AACA,aAAKK,UAAL,GAAkBD,EAAlB;;AAEA,YAAI,kBAAkBE,SAAtB,EAAiC;AAC7B;AACA,iBAAKC,QAAL,GAAgB,KAAKP,MAAL,CAAYO,QAA5B;AACA,iBAAKC,MAAL;;AAEA;AACA,iBAAKH,UAAL,CAAgBI,EAAhB,CAAmB,MAAnB,EAA2B,YAAM;AAC7B,sBAAKD,MAAL;AACH,aAFD;;AAIA;AACAF,sBAAUI,YAAV,CAAuBC,gBAAvB,CAAwC,MAAxC,EAAgD,YAAM;AAClD,sBAAKN,UAAL,CAAgBO,IAAhB;AACH,aAFD;AAGAN,sBAAUI,YAAV,CAAuBC,gBAAvB,CAAwC,OAAxC,EAAiD,YAAM;AACnD,sBAAKN,UAAL,CAAgBQ,SAAhB;AACH,aAFD;AAGAP,sBAAUI,YAAV,CAAuBC,gBAAvB,CAAwC,cAAxC,EAAwD,YAAM;AAC1D,sBAAKN,UAAL,CAAgBS,YAAhB;AACH,aAFD;AAGAR,sBAAUI,YAAV,CAAuBC,gBAAvB,CAAwC,aAAxC,EAAuD,YAAM;AACzD,sBAAKN,UAAL,CAAgBU,WAAhB;AACH,aAFD;AAGH;AACJ;;;;+BAEM,CAAE;;;kCAEC,CAAE;;;iCAEH;AACL,gBAAI,QAAOC,aAAP,yCAAOA,aAAP,eAAgCC,QAAhC,yCAAgCA,QAAhC,EAAJ,EAA8C;AAC1C;AACAX,0BAAUI,YAAV,CAAuBH,QAAvB,GAAkC,IAAIS,aAAJ,CAAkB,KAAKT,QAAvB,CAAlC;AACH;AACJ;;;;;;kBA1DgBR,kB","file":"wavesurfer.mediasession.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"mediasession\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mediasession\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"mediasession\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2c15e2516df024c56ce9","/*global MediaMetadata*/\n\n/**\n * @typedef {Object} MediaSessionPluginParams\n * @property {MediaMetadata} metadata A MediaMetadata object: a representation\n * of the metadata associated with a MediaSession that can be used by user agents\n * to provide a customized user interface.\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('mediasession')`\n */\n\n/**\n * Visualise MediaSession information for a wavesurfer instance.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import MediaSessionPlugin from 'wavesurfer.mediasession.js';\n *\n * // commonjs\n * var MediaSessionPlugin = require('wavesurfer.mediasession.js');\n *\n * // if you are using <script> tags\n * var MediaSessionPlugin = window.WaveSurfer.mediasession;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     MediaSessionPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class MediaSessionPlugin {\n    /**\n     * MediaSession plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {MediaSessionPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'mediasession',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            instance: MediaSessionPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n\n        if ('mediaSession' in navigator) {\n            // update metadata\n            this.metadata = this.params.metadata;\n            this.update();\n\n            // update metadata when playback starts\n            this.wavesurfer.on('play', () => {\n                this.update();\n            });\n\n            // set playback action handlers\n            navigator.mediaSession.setActionHandler('play', () => {\n                this.wavesurfer.play();\n            });\n            navigator.mediaSession.setActionHandler('pause', () => {\n                this.wavesurfer.playPause();\n            });\n            navigator.mediaSession.setActionHandler('seekbackward', () => {\n                this.wavesurfer.skipBackward();\n            });\n            navigator.mediaSession.setActionHandler('seekforward', () => {\n                this.wavesurfer.skipForward();\n            });\n        }\n    }\n\n    init() {}\n\n    destroy() {}\n\n    update() {\n        if (typeof MediaMetadata === typeof Function) {\n            // set metadata\n            navigator.mediaSession.metadata = new MediaMetadata(this.metadata);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugin/mediasession.js"],"sourceRoot":""}